openapi: 3.0.0
info:
  title: Naga User API v2
  description: RESTful API for naga exchange platform.
  version: 2.7.0
tags:
  - name: api
    description: Operations about apis
paths:
  /api/v2/exchange/public/config:
    get:
      responses:
        "200":
          description: get Config(s)
      tags:
        - api
      operationId: getApiV2ExchangePublicConfig
  /api/v2/exchange/public/withdraw_limits:
    get:
      description: Returns withdraw limits table as paginated collection
      parameters:
        - in: query
          name: group
          description: Member group for define withdraw limits.
          required: false
          schema:
            type: string
        - in: query
          name: kyc_level
          description: KYC level for define withdraw limits.
          required: false
          schema:
            type: string
        - in: query
          name: limit
          description: Limit the number of returned paginations. Defaults to 100.
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 1000
            default: 100
        - in: query
          name: page
          description: Specify the page of paginated results.
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: ordering
          description: If set, returned values will be sorted in specific order, defaults
            to 'desc'.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
        - in: query
          name: order_by
          description: Name of the field, which result will be ordered by.
          required: false
          schema:
            type: string
            default: id
      responses:
        "200":
          description: Returns withdraw limits table as paginated collection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WithdrawLimit"
      tags:
        - api
      operationId: getApiV2ExchangePublicWithdrawLimits
  "/api/v2/exchange/public/webhooks/{adapter}/{event}":
    post:
      description: Webhook controller
      parameters:
        - in: path
          name: adapter
          description: Name of adapter for process webhook
          required: true
          schema:
            type: string
        - in: path
          name: event
          description: Name of event can be deposit or withdraw
          required: true
          schema:
            type: string
            enum:
              - deposit
              - withdraw
              - deposit_address
              - generic
      responses:
        "201":
          description: Webhook controller
      tags:
        - api
      operationId: postApiV2ExchangePublicWebhooksAdapterEvent
  /api/v2/exchange/public/trading_fees:
    get:
      description: Returns trading_fees table as paginated collection
      parameters:
        - in: query
          name: group
          description: Member group for define maker/taker fee.
          required: false
          schema:
            type: string
        - in: query
          name: market_id
          description: Market id for define maker/taker fee.
          required: false
          schema:
            type: string
            enum:
              - ethidr
              - any
        - in: query
          name: market_type
          description: ""
          required: false
          schema:
            type: string
            enum:
              - spot
              - qe
            default: {}
        - in: query
          name: limit
          description: Limit the number of returned paginations. Defaults to 100.
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 1000
            default: 100
        - in: query
          name: page
          description: Specify the page of paginated results.
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: ordering
          description: If set, returned values will be sorted in specific order, defaults
            to 'desc'.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
        - in: query
          name: order_by
          description: Name of the field, which result will be ordered by.
          required: false
          schema:
            type: string
            default: id
      responses:
        "200":
          description: Returns trading_fees table as paginated collection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TradingFee"
      tags:
        - api
      operationId: getApiV2ExchangePublicTradingFees
  /api/v2/exchange/public/health/ready:
    get:
      description: Get application readiness status
      responses:
        "200":
          description: Get application readiness status
      tags:
        - api
      operationId: getApiV2ExchangePublicHealthReady
  /api/v2/exchange/public/health/alive:
    get:
      description: Get application liveness status
      responses:
        "200":
          description: Get application liveness status
      tags:
        - api
      operationId: getApiV2ExchangePublicHealthAlive
  /api/v2/exchange/public/timestamp:
    get:
      description: Get server current time, in seconds since Unix epoch.
      responses:
        "200":
          description: Get server current time, in seconds since Unix epoch.
      tags:
        - api
      operationId: getApiV2ExchangePublicTimestamp
  /api/v2/exchange/public/member-levels:
    get:
      description: Returns hash of minimum levels and the privileges they provide.
      responses:
        "200":
          description: Returns hash of minimum levels and the privileges they provide.
      tags:
        - api
      operationId: getApiV2ExchangePublicMemberLevels
  "/api/v2/exchange/public/markets/{market}/tickers":
    get:
      description: Get ticker of specific market.
      parameters:
        - in: path
          name: market
          description: ""
          required: true
          schema:
            type: string
            enum:
              - ethidr
      responses:
        "200":
          description: Get ticker of specific market.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticker"
      tags:
        - api
      operationId: getApiV2ExchangePublicMarketsMarketTickers
  /api/v2/exchange/public/markets/tickers:
    get:
      description: Get ticker of all markets (For response doc see /:market/tickers/
        response).
      responses:
        "200":
          description: Get ticker of all markets (For response doc see /:market/tickers/
            response).
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticker"
      tags:
        - api
      operationId: getApiV2ExchangePublicMarketsTickers
  "/api/v2/exchange/public/markets/{market}/k-line":
    get:
      description: Get OHLC(k line) of specific market.
      parameters:
        - in: path
          name: market
          description: ""
          required: true
          schema:
            type: string
            enum:
              - ethidr
        - in: query
          name: period
          description: Time period of K line, default to 1. You can choose between 1, 5,
            15, 30, 60, 120, 240, 360, 720, 1440, 4320, 10080
          required: false
          schema:
            type: integer
            format: int32
            enum:
              - 1
              - 5
              - 15
              - 30
              - 60
              - 120
              - 240
              - 360
              - 720
              - 1440
              - 4320
              - 10080
            default: 1
        - in: query
          name: time_from
          description: An integer represents the seconds elapsed since Unix epoch. If set,
            only k-line data after that time will be returned.
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: time_to
          description: An integer represents the seconds elapsed since Unix epoch. If set,
            only k-line data till that time will be returned.
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: limit
          description: Limit the number of returned data points default to 30. Ignored if
            time_from and time_to are given.
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 10000
            default: 30
      responses:
        "200":
          description: Get OHLC(k line) of specific market.
      tags:
        - api
      operationId: getApiV2ExchangePublicMarketsMarketKLine
  "/api/v2/exchange/public/markets/{market}/depth":
    get:
      description: Get depth or specified market. Both asks and bids are sorted from
        highest price to lowest.
      parameters:
        - in: path
          name: market
          description: ""
          required: true
          schema:
            type: string
            enum:
              - ethidr
        - in: query
          name: limit
          description: Limit the number of returned price levels. Default to 300.
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 1000
            default: 300
      responses:
        "200":
          description: Get depth or specified market. Both asks and bids are sorted from
            highest price to lowest.
      tags:
        - api
      operationId: getApiV2ExchangePublicMarketsMarketDepth
  "/api/v2/exchange/public/markets/{market}/trades":
    get:
      description: Get recent trades on market, each trade is included only once. Trades
        are sorted in reverse creation order.
      parameters:
        - in: path
          name: market
          description: ""
          required: true
          schema:
            type: string
            enum:
              - ethidr
        - in: query
          name: limit
          description: Limit the number of returned trades. Default to 100.
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 1000
            default: 100
        - in: query
          name: timestamp
          description: An integer represents the seconds elapsed since Unix epoch.If set,
            only trades executed before the time will be returned.
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: order_by
          description: If set, returned trades will be sorted in specific order, default to
            'desc'.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
      responses:
        "200":
          description: Get recent trades on market, each trade is included only once.
            Trades are sorted in reverse creation order.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Trade"
      tags:
        - api
      operationId: getApiV2ExchangePublicMarketsMarketTrades
  "/api/v2/exchange/public/markets/{market}/order-book":
    get:
      description: Get the order book of specified market.
      parameters:
        - in: path
          name: market
          description: ""
          required: true
          schema:
            type: string
            enum:
              - ethidr
        - in: query
          name: asks_limit
          description: Limit the number of returned sell orders. Default to 20.
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 200
            default: 20
        - in: query
          name: bids_limit
          description: Limit the number of returned buy orders. Default to 20.
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 200
            default: 20
      responses:
        "200":
          description: Get the order book of specified market.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderBook"
      tags:
        - api
      operationId: getApiV2ExchangePublicMarketsMarketOrderBook
  /api/v2/exchange/public/markets:
    get:
      description: Get all available markets.
      parameters:
        - in: query
          name: limit
          description: Limit the number of returned paginations. Defaults to 100.
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 1000
            default: 100
        - in: query
          name: page
          description: Specify the page of paginated results.
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: ordering
          description: If set, returned values will be sorted in specific order, defaults
            to 'asc'.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            default: asc
        - in: query
          name: order_by
          description: Name of the field, which result will be ordered by.
          required: false
          schema:
            type: string
            enum:
              - id
              - position
            default: position
        - in: query
          name: base_unit
          description: Strict filter for base unit
          required: false
          schema:
            type: string
        - in: query
          name: quote_unit
          description: Strict filter for quote unit
          required: false
          schema:
            type: string
        - in: query
          name: type
          description: Strict filter for market type
          required: false
          schema:
            type: string
            enum:
              - spot
              - qe
            default: {}
        - in: query
          name: search
          description: ""
          required: false
          schema:
            type: json
        - in: query
          name: search[base_code]
          description: Search base currency code using LIKE
          required: false
          schema:
            type: string
        - in: query
          name: search[quote_code]
          description: Search qoute currency code using LIKE
          required: false
          schema:
            type: string
        - in: query
          name: search[base_name]
          description: Search base currency name using LIKE
          required: false
          schema:
            type: string
        - in: query
          name: search[quote_name]
          description: Search quote currency name using LIKE
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Get all available markets.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Market"
      tags:
        - api
      operationId: getApiV2ExchangePublicMarkets
  /api/v2/exchange/public/currencies:
    get:
      description: Get list of currencies
      parameters:
        - in: query
          name: limit
          description: Limit the number of returned paginations. Defaults to 100.
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 1000
            default: 100
        - in: query
          name: page
          description: Specify the page of paginated results.
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: type
          description: Currency type
          required: false
          schema:
            type: string
            enum:
              - fiat
              - coin
        - in: query
          name: search
          description: ""
          required: false
          schema:
            type: json
        - in: query
          name: search[code]
          description: Search by currency code using SQL LIKE
          required: false
          schema:
            type: string
        - in: query
          name: search[name]
          description: Search by currency name using SQL LIKE
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Get list of currencies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Currency"
      tags:
        - api
      operationId: getApiV2ExchangePublicCurrencies
  "/api/v2/exchange/public/currencies/{id}":
    get:
      description: Get a currency
      parameters:
        - in: path
          name: id
          description: Currency code.
          required: true
          schema:
            type: string
            enum:
              - bnb
              - eth
              - idr
              - jst
              - matic
              - trx
              - usdt
              - BNB
              - ETH
              - IDR
              - JST
              - MATIC
              - TRX
              - USDT
      responses:
        "200":
          description: Get a currency
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Currency"
      tags:
        - api
      operationId: getApiV2ExchangePublicCurrenciesId
  /api/v2/exchange/account/members/me:
    get:
      description: Returns current member
      responses:
        "200":
          description: Returns current member
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Member"
      tags:
        - api
      operationId: getApiV2ExchangeAccountMembersMe
  /api/v2/exchange/account/internal_transfers:
    post:
      description: Creates internal transfer.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                currency:
                  description: The currency code.
                  type: string
                  enum:
                    - bnb
                    - eth
                    - idr
                    - jst
                    - matic
                    - trx
                    - usdt
                    - BNB
                    - ETH
                    - IDR
                    - JST
                    - MATIC
                    - TRX
                    - USDT
                amount:
                  description: The amount to transfer.
                  type: number
                  format: double
                otp:
                  description: OTP to perform action
                  type: integer
                  format: int32
                username_or_uid:
                  description: Receiver uid or username.
                  type: string
              required:
                - currency
                - amount
                - otp
                - username_or_uid
      responses:
        "201":
          description: Creates internal transfer.
      tags:
        - api
      operationId: postApiV2ExchangeAccountInternalTransfers
    get:
      description: List your internal transfers as paginated collection.
      parameters:
        - in: query
          name: currency
          description: Currency code.
          required: false
          schema:
            type: string
            enum:
              - bnb
              - eth
              - idr
              - jst
              - matic
              - trx
              - usdt
              - BNB
              - ETH
              - IDR
              - JST
              - MATIC
              - TRX
              - USDT
        - in: query
          name: state
          description: The state to filter by.
          required: false
          schema:
            type: string
        - in: query
          name: sender
          description: ""
          required: false
          schema:
            type: string
      responses:
        "200":
          description: List your internal transfers as paginated collection.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InternalTransfer"
      tags:
        - api
      operationId: getApiV2ExchangeAccountInternalTransfers
  /api/v2/exchange/account/stats/pnl:
    get:
      description: Get assets pnl calculated into one currency
      parameters:
        - in: query
          name: pnl_currency
          description: Currency code in which the PnL is calculated
          required: false
          schema:
            type: string
            enum:
              - bnb
              - eth
              - idr
              - jst
              - matic
              - trx
              - usdt
              - BNB
              - ETH
              - IDR
              - JST
              - MATIC
              - TRX
              - USDT
      responses:
        "200":
          description: Get assets pnl calculated into one currency
      tags:
        - api
      operationId: getApiV2ExchangeAccountStatsPnl
  /api/v2/exchange/account/transactions:
    get:
      description: Get your transactions history.
      parameters:
        - in: query
          name: currency
          description: Currency code
          required: false
          schema:
            type: string
            enum:
              - bnb
              - eth
              - idr
              - jst
              - matic
              - trx
              - usdt
              - BNB
              - ETH
              - IDR
              - JST
              - MATIC
              - TRX
              - USDT
        - in: query
          name: order_by
          description: Sorting order
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
        - in: query
          name: time_from
          description: An integer represents the seconds elapsed since Unix epoch.
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: time_to
          description: An integer represents the seconds elapsed since Unix epoch.
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: deposit_state
          description: Filter deposits by states.
          required: false
          schema:
            type: string
        - in: query
          name: withdraw_state
          description: Filter withdraws by states.
          required: false
          schema:
            type: string
        - in: query
          name: txid
          description: Transaction id.
          required: false
          schema:
            type: string
        - in: query
          name: limit
          description: Limit the number of returned transactions. Default to 100.
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 1000
            default: 100
        - in: query
          name: page
          description: Specify the page of paginated results.
          required: false
          schema:
            type: integer
            format: int32
            default: 1
      responses:
        "200":
          description: Get your transactions history.
      tags:
        - api
      operationId: getApiV2ExchangeAccountTransactions
  /api/v2/exchange/account/withdraws:
    post:
      description: Creates new withdrawal to active beneficiary.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                otp:
                  description: OTP to perform action
                  type: integer
                  format: int32
                beneficiary_id:
                  description: ID of Active Beneficiary belonging to user.
                  type: integer
                  format: int32
                currency:
                  description: The currency code.
                  type: string
                  enum:
                    - bnb
                    - eth
                    - idr
                    - jst
                    - matic
                    - trx
                    - usdt
                    - BNB
                    - ETH
                    - IDR
                    - JST
                    - MATIC
                    - TRX
                    - USDT
                amount:
                  description: The amount to withdraw.
                  type: number
                  format: double
                note:
                  description: Optional user metadata to be applied to the transaction.
                    Used to tag transactions with memorable comments.
                  type: string
              required:
                - otp
                - beneficiary_id
                - currency
                - amount
      responses:
        "201":
          description: Creates new withdrawal to active beneficiary.
      tags:
        - api
      operationId: postApiV2ExchangeAccountWithdraws
    get:
      description: List your withdraws as paginated collection.
      parameters:
        - in: query
          name: currency
          description: Currency code.
          required: false
          schema:
            type: string
            enum:
              - bnb
              - eth
              - idr
              - jst
              - matic
              - trx
              - usdt
              - BNB
              - ETH
              - IDR
              - JST
              - MATIC
              - TRX
              - USDT
        - in: query
          name: blockchain_key
          description: Blockchain key of the requested withdrawal
          required: false
          schema:
            type: string
            enum:
              - bsc-mainnet
              - eth-mainnet
              - polygon-mainnet
              - tron-mainnet
        - in: query
          name: limit
          description: Number of withdraws per page (defaults to 100, maximum is 100).
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 100
            default: 100
        - in: query
          name: state
          description: Filter withdrawals by states.
          required: false
          schema:
            type: string
        - in: query
          name: rid
          description: Wallet address on the Blockchain.
          required: false
          schema:
            type: string
        - in: query
          name: time_from
          description: An integer represents the seconds elapsed since Unix epoch.
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: time_to
          description: An integer represents the seconds elapsed since Unix epoch.
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: page
          description: Page number (defaults to 1).
          required: false
          schema:
            type: integer
            format: int32
            default: 1
      responses:
        "200":
          description: List your withdraws as paginated collection.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Withdraw"
      tags:
        - api
      operationId: getApiV2ExchangeAccountWithdraws
  /api/v2/exchange/account/withdraws/sums:
    get:
      description: Returns withdrawal sums for last 24 hours and 1 month
      responses:
        "200":
          description: Returns withdrawal sums for last 24 hours and 1 month
      tags:
        - api
      operationId: getApiV2ExchangeAccountWithdrawsSums
  "/api/v2/exchange/account/beneficiaries/{id}":
    delete:
      description: Delete beneficiary
      parameters:
        - in: path
          name: id
          description: Beneficiary Identifier in Database
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete beneficiary
      tags:
        - api
      operationId: deleteApiV2ExchangeAccountBeneficiariesId
    get:
      description: Get beneficiary by ID
      parameters:
        - in: path
          name: id
          description: Beneficiary Identifier in Database
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get beneficiary by ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Beneficiary"
      tags:
        - api
      operationId: getApiV2ExchangeAccountBeneficiariesId
  "/api/v2/exchange/account/beneficiaries/{id}/activate":
    patch:
      description: Activates beneficiary with pin
      parameters:
        - in: path
          name: id
          description: Beneficiary Identifier in Database
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                pin:
                  description: Pin code for beneficiary activation
                  type: integer
                  format: int32
              required:
                - pin
      responses:
        "200":
          description: Activates beneficiary with pin
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Beneficiary"
      tags:
        - api
      operationId: patchApiV2ExchangeAccountBeneficiariesIdActivate
  "/api/v2/exchange/account/beneficiaries/{id}/resend_pin":
    patch:
      description: Resend beneficiary pin
      parameters:
        - in: path
          name: id
          description: Beneficiary Identifier in Database
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Resend beneficiary pin
      tags:
        - api
      operationId: patchApiV2ExchangeAccountBeneficiariesIdResendPin
  /api/v2/exchange/account/beneficiaries:
    post:
      description: Create new beneficiary
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                currency:
                  description: Beneficiary currency code.
                  type: string
                  enum:
                    - bnb
                    - eth
                    - idr
                    - jst
                    - matic
                    - trx
                    - usdt
                    - BNB
                    - ETH
                    - IDR
                    - JST
                    - MATIC
                    - TRX
                    - USDT
                blockchain_key:
                  description: Blockchain key of the requested beneficiary
                  type: string
                  enum:
                    - bsc-mainnet
                    - eth-mainnet
                    - polygon-mainnet
                    - tron-mainnet
                name:
                  description: Human rememberable name which refer beneficiary.
                  type: string
                description:
                  description: Human rememberable name which refer beneficiary.
                  type: string
                data:
                  description: Beneficiary data in JSON format
                  type: json
              required:
                - currency
                - blockchain_key
                - name
                - data
      responses:
        "201":
          description: Create new beneficiary
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Beneficiary"
      tags:
        - api
      operationId: postApiV2ExchangeAccountBeneficiaries
    get:
      description: Get list of user beneficiaries
      parameters:
        - in: query
          name: limit
          description: Limit the number of returned paginations. Defaults to 100.
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 1000
            default: 100
        - in: query
          name: page
          description: Specify the page of paginated results.
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: currency
          description: Beneficiary currency code.
          required: false
          schema:
            type: string
            enum:
              - bnb
              - eth
              - idr
              - jst
              - matic
              - trx
              - usdt
              - BNB
              - ETH
              - IDR
              - JST
              - MATIC
              - TRX
              - USDT
        - in: query
          name: blockchain_key
          description: Blockchain key of the requested beneficiary
          required: false
          schema:
            type: string
            enum:
              - bsc-mainnet
              - eth-mainnet
              - polygon-mainnet
              - tron-mainnet
        - in: query
          name: state
          description: Defines either beneficiary active - user can use it to withdraw
            moneyor pending - requires beneficiary activation with pin.
          required: false
          schema:
            type: string
            enum:
              - pending
              - active
      responses:
        "200":
          description: Get list of user beneficiaries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Beneficiary"
      tags:
        - api
      operationId: getApiV2ExchangeAccountBeneficiaries
  "/api/v2/exchange/account/deposit_address/{currency}":
    get:
      description: Returns deposit address for account you want to deposit to by currency.
        The address may be blank because address generation process is still in
        progress. If this case you should try again later.
      parameters:
        - in: path
          name: currency
          description: The account you want to deposit to.
          required: true
          schema:
            type: string
            enum:
              - bnb
              - eth
              - idr
              - jst
              - matic
              - trx
              - usdt
              - BNB
              - ETH
              - IDR
              - JST
              - MATIC
              - TRX
              - USDT
        - in: query
          name: blockchain_key
          description: Blockchain key of the requested deposit address
          required: false
          schema:
            type: string
        - in: query
          name: address_format
          description: Address format legacy/cash
          required: false
          schema:
            type: string
            enum:
              - legacy
              - cash
      responses:
        "200":
          description: Returns deposit address for account you want to deposit to by
            currency. The address may be blank because address generation
            process is still in progress. If this case you should try again
            later.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Deposit"
      tags:
        - api
      operationId: getApiV2ExchangeAccountDepositAddressCurrency
  "/api/v2/exchange/account/deposits/{txid}":
    get:
      description: Get details of specific deposit.
      parameters:
        - in: path
          name: txid
          description: Deposit transaction id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get details of specific deposit.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Deposit"
      tags:
        - api
      operationId: getApiV2ExchangeAccountDepositsTxid
  /api/v2/exchange/account/deposits:
    get:
      description: Get your deposits history.
      parameters:
        - in: query
          name: currency
          description: Currency code
          required: false
          schema:
            type: string
            enum:
              - bnb
              - eth
              - idr
              - jst
              - matic
              - trx
              - usdt
              - BNB
              - ETH
              - IDR
              - JST
              - MATIC
              - TRX
              - USDT
        - in: query
          name: state
          description: Filter deposits by states.
          required: false
          schema:
            type: string
        - in: query
          name: txid
          description: Deposit transaction id.
          required: false
          schema:
            type: string
        - in: query
          name: blockchain_key
          description: Blockchain key of the requested deposit
          required: false
          schema:
            type: string
            enum:
              - bsc-mainnet
              - eth-mainnet
              - polygon-mainnet
              - tron-mainnet
        - in: query
          name: time_from
          description: An integer represents the seconds elapsed since Unix epoch.
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: time_to
          description: An integer represents the seconds elapsed since Unix epoch.
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: limit
          description: Number of deposits per page (defaults to 100, maximum is 100).
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 100
            default: 100
        - in: query
          name: page
          description: Page number (defaults to 1).
          required: false
          schema:
            type: integer
            format: int32
            default: 1
      responses:
        "200":
          description: Get your deposits history.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Deposit"
      tags:
        - api
      operationId: getApiV2ExchangeAccountDeposits
  "/api/v2/exchange/account/balances/{currency}":
    get:
      description: Get user account by currency
      parameters:
        - in: path
          name: currency
          description: The currency code.
          required: true
          schema:
            type: string
            enum:
              - bnb
              - eth
              - idr
              - jst
              - matic
              - trx
              - usdt
      responses:
        "200":
          description: Get user account by currency
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
      tags:
        - api
      operationId: getApiV2ExchangeAccountBalancesCurrency
  /api/v2/exchange/account/balances:
    get:
      description: Get list of user accounts
      parameters:
        - in: query
          name: limit
          description: Limit the number of returned paginations. Defaults to 100.
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 1000
            default: 100
        - in: query
          name: page
          description: Specify the page of paginated results.
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: nonzero
          description: Filter non zero balances.
          required: false
          schema:
            type: Boolean
        - in: query
          name: search
          description: ""
          required: false
          schema:
            type: json
        - in: query
          name: search[currency_code]
          description: ""
          required: false
          schema:
            type: string
        - in: query
          name: search[currency_name]
          description: ""
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Get list of user accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Account"
      tags:
        - api
      operationId: getApiV2ExchangeAccountBalances
  /api/v2/exchange/market/trades:
    get:
      description: Get your executed trades. Trades are sorted in reverse creation order.
      parameters:
        - in: query
          name: market
          description: ""
          required: false
          schema:
            type: string
        - in: query
          name: market_type
          description: ""
          required: false
          schema:
            type: string
            enum:
              - spot
              - qe
            default: {}
        - in: query
          name: limit
          description: Limit the number of returned trades. Default to 100.
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 1000
            default: 100
        - in: query
          name: page
          description: Specify the page of paginated results.
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: type
          description: To indicate nature of trade - buy/sell
          required: false
          schema:
            type: string
            enum:
              - buy
              - sell
        - in: query
          name: time_from
          description: An integer represents the seconds elapsed since Unix epoch.If set,
            only trades executed after the time will be returned.
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: time_to
          description: An integer represents the seconds elapsed since Unix epoch.If set,
            only trades executed before the time will be returned.
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: order_by
          description: If set, returned trades will be sorted in specific order, default to
            'desc'.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
      responses:
        "200":
          description: Get your executed trades. Trades are sorted in reverse creation
            order.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Trade"
      tags:
        - api
      operationId: getApiV2ExchangeMarketTrades
  /api/v2/exchange/market/orders/cancel:
    post:
      description: Cancel all my orders.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                market:
                  type: string
                  enum:
                    - ethidr
                market_type:
                  type: string
                  enum:
                    - spot
                    - qe
                  default: {}
                side:
                  description: If present, only sell orders (asks) or buy orders (bids)
                    will be cancelled.
                  type: string
                  enum:
                    - sell
                    - buy
      responses:
        "201":
          description: Cancel all my orders.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
      tags:
        - api
      operationId: postApiV2ExchangeMarketOrdersCancel
  "/api/v2/exchange/market/orders/{id}/cancel":
    post:
      description: Cancel an order.
      parameters:
        - in: path
          name: id
          description: ""
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Cancel an order.
      tags:
        - api
      operationId: postApiV2ExchangeMarketOrdersIdCancel
  /api/v2/exchange/market/orders:
    post:
      description: Create a Sell/Buy order.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                market:
                  type: string
                  enum:
                    - ethidr
                side:
                  type: string
                  enum:
                    - sell
                    - buy
                volume:
                  type: number
                  format: double
                ord_type:
                  type: string
                  enum:
                    - market
                    - limit
                  default: limit
                price:
                  type: number
                  format: double
              required:
                - market
                - side
                - volume
                - price
      responses:
        "201":
          description: Create a Sell/Buy order.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
      tags:
        - api
      operationId: postApiV2ExchangeMarketOrders
    get:
      description: Get your orders, result is paginated.
      parameters:
        - in: query
          name: market
          description: ""
          required: false
          schema:
            type: string
        - in: query
          name: market_type
          description: ""
          required: false
          schema:
            type: string
            enum:
              - spot
              - qe
            default: {}
        - in: query
          name: base_unit
          description: ""
          required: false
          schema:
            type: string
            enum:
              - eth
        - in: query
          name: quote_unit
          description: ""
          required: false
          schema:
            type: string
            enum:
              - eth
        - in: query
          name: state
          description: Filter order by state.
          required: false
          schema:
            type: string
        - in: query
          name: limit
          description: Limit the number of returned orders, default to 100.
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 1000
            default: 100
        - in: query
          name: page
          description: Specify the page of paginated results.
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: order_by
          description: If set, returned orders will be sorted in specific order, default to
            "desc".
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
        - in: query
          name: ord_type
          description: Filter order by ord_type.
          required: false
          schema:
            type: string
            enum:
              - market
              - limit
        - in: query
          name: type
          description: Filter order by type.
          required: false
          schema:
            type: string
            enum:
              - buy
              - sell
        - in: query
          name: time_from
          description: An integer represents the seconds elapsed since Unix epoch.If set,
            only orders created after the time will be returned.
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: time_to
          description: An integer represents the seconds elapsed since Unix epoch.If set,
            only orders created before the time will be returned.
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get your orders, result is paginated.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
      tags:
        - api
      operationId: getApiV2ExchangeMarketOrders
  "/api/v2/exchange/market/orders/{id}":
    get:
      description: Get information of specified order.
      parameters:
        - in: path
          name: id
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get information of specified order.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
      tags:
        - api
      operationId: getApiV2ExchangeMarketOrdersId
  "/api/v2/exchange/coinmarketcap/orderbook/{market_pair}":
    get:
      description: Get depth or specified market
      parameters:
        - in: path
          name: market_pair
          description: A pair such as "LTC_BTC"
          required: true
          schema:
            type: string
        - in: query
          name: depth
          description: "Orders depth quantity: [0,5,10,20,50,100,500]"
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 500
      responses:
        "200":
          description: Get depth or specified market
      tags:
        - api
      operationId: getApiV2ExchangeCoinmarketcapOrderbookMarketPair
  "/api/v2/exchange/coinmarketcap/trades/{market_pair}":
    get:
      description: Get recent trades on market
      parameters:
        - in: path
          name: market_pair
          description: A pair such as "LTC_BTC"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get recent trades on market
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trade"
      tags:
        - api
      operationId: getApiV2ExchangeCoinmarketcapTradesMarketPair
  /api/v2/exchange/coinmarketcap/ticker:
    get:
      description: Get 24-hour pricing and volume summary for each market pair
      responses:
        "200":
          description: Get 24-hour pricing and volume summary for each market pair
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticker"
      tags:
        - api
      operationId: getApiV2ExchangeCoinmarketcapTicker
  /api/v2/exchange/coinmarketcap/assets:
    get:
      description: Details on crypto currencies available on the exchange
      responses:
        "200":
          description: Details on crypto currencies available on the exchange
      tags:
        - api
      operationId: getApiV2ExchangeCoinmarketcapAssets
  /api/v2/exchange/coinmarketcap/summary:
    get:
      description: Overview of market data for all tickers and all market pairs on the
        exchange
      responses:
        "200":
          description: Overview of market data for all tickers and all market pairs on the
            exchange
      tags:
        - api
      operationId: getApiV2ExchangeCoinmarketcapSummary
  /api/v2/exchange/coingecko/historical_trades:
    get:
      description: Get recent trades on market
      parameters:
        - in: query
          name: ticker_id
          description: A pair such as "LTC_BTC"
          required: true
          schema:
            type: string
        - in: query
          name: type
          description: To indicate nature of trade - buy/sell
          required: false
          schema:
            type: string
            enum:
              - buy
              - sell
        - in: query
          name: limit
          description: Number of historical trades to retrieve from time of query. [0, 200,
            500...]. 0 returns full history
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 1000
        - in: query
          name: start_time
          description: ""
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: end_time
          description: ""
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Get recent trades on market
      tags:
        - api
      operationId: getApiV2ExchangeCoingeckoHistoricalTrades
  /api/v2/exchange/coingecko/orderbook:
    get:
      description: Get depth or specified market
      parameters:
        - in: query
          name: ticker_id
          description: A pair such as "LTC_BTC"
          required: true
          schema:
            type: string
        - in: query
          name: depth
          description: "Orders depth quantity: [0, 100, 200, 500...]"
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 1000
      responses:
        "200":
          description: Get depth or specified market
      tags:
        - api
      operationId: getApiV2ExchangeCoingeckoOrderbook
  /api/v2/exchange/coingecko/tickers:
    get:
      description: Get list of all available trading pairs
      responses:
        "200":
          description: Get list of all available trading pairs
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticker"
      tags:
        - api
      operationId: getApiV2ExchangeCoingeckoTickers
  /api/v2/exchange/coingecko/pairs:
    get:
      description: Get list of all available trading pairs
      responses:
        "200":
          description: Get list of all available trading pairs
      tags:
        - api
      operationId: getApiV2ExchangeCoingeckoPairs
servers:
  - url: https://dev.nagaexchange.co.id/api/v2/exchange
components:
  schemas:
    WithdrawLimit:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Unique withdraw limit table identifier in database.
        group:
          type: string
          description: Member group for define withdraw limits.
        kyc_level:
          type: string
          description: KYC level for define withdraw limits.
        limit_24_hour:
          type: number
          format: double
          description: 24 hours withdraw limit.
        limit_1_month:
          type: number
          format: double
          description: 1 month withdraw limit.
        created_at:
          type: string
          description: Withdraw limit table created time in iso8601 format.
        updated_at:
          type: string
          description: Withdraw limit table updated time in iso8601 format.
      description: Returns withdraw limits table as paginated collection
    TradingFee:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Unique trading fee table identifier in database.
        group:
          type: string
          description: Member group for define maker/taker fee.
        market_id:
          type: string
          description: Market id for define maker/taker fee.
        market_type:
          type: string
          description: Market type.
        maker:
          type: number
          format: double
          description: Market maker fee.
        taker:
          type: number
          format: double
          description: Market taker fee.
        created_at:
          type: string
          description: Trading fee table created time in iso8601 format.
        updated_at:
          type: string
          description: Trading fee table updated time in iso8601 format.
      description: Returns trading_fees table as paginated collection
    Ticker:
      type: object
      properties:
        at:
          type: integer
          format: int32
          description: Timestamp of ticker
        ticker:
          $ref: "#/components/schemas/TickerEntry"
      description: Get list of all available trading pairs
    TickerEntry:
      type: object
      properties:
        low:
          type: number
          format: double
          description: The lowest trade price during last 24 hours (0.0 if no trades
            executed during last 24 hours)
        high:
          type: number
          format: double
          description: The highest trade price during last 24 hours (0.0 if no trades
            executed during last 24 hours)
        open:
          type: number
          format: double
          description: Price of the first trade executed 24 hours ago or less
        last:
          type: number
          format: double
          description: The last executed trade price
        volume:
          type: number
          format: double
          description: Total volume of trades executed during last 24 hours
        amount:
          type: number
          format: double
          description: Total amount of trades executed during last 24 hours
        vol:
          type: number
          format: double
          description: Alias to volume
        avg_price:
          type: number
          format: double
          description: Average price more precisely VWAP is calculated by adding up the
            total traded for every transaction(price multiplied by the number of
            shares traded) and then dividing by the total shares traded
        price_change_percent:
          type: string
          description: Price change in the next format +3.19%.Price change is calculated
            using next formula (last - open) / open * 100%
        at:
          type: integer
          format: int32
          description: Timestamp of ticker
    Trade:
      type: object
      properties:
        id:
          type: string
          description: Trade ID.
        price:
          type: number
          format: double
          description: Trade price.
        amount:
          type: number
          format: double
          description: Trade amount.
        total:
          type: number
          format: double
          description: Trade total (Amount * Price).
        fee_currency:
          type: number
          format: double
          description: Currency user's fees were charged in.
        fee:
          type: number
          format: double
          description: Percentage of fee user was charged for performed trade.
        fee_amount:
          type: number
          format: double
          description: Amount of fee user was charged for performed trade.
        market:
          type: string
          description: Trade market id.
        market_type:
          type: string
          description: Market type.
        created_at:
          type: string
          description: Trade create time in iso8601 format.
        taker_type:
          type: string
          description: Trade taker order type (sell or buy).
        side:
          type: string
          description: Trade side.
        order_id:
          type: integer
          format: int32
          description: Order id.
      description: Get recent trades on market
    OrderBook:
      type: object
      properties:
        asks:
          type: array
          items:
            $ref: "#/components/schemas/Order"
          description: Asks in orderbook
        bids:
          type: array
          items:
            $ref: "#/components/schemas/Order"
          description: Bids in orderbook
      description: Get the order book of specified market.
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Unique order id.
        uuid:
          type: string
          description: Unique order UUID.
        side:
          type: string
          description: Either 'sell' or 'buy'.
        ord_type:
          type: string
          description: Type of order, either 'limit' or 'market'.
        price:
          type: number
          format: double
          description: Price for each unit. e.g.If you want to sell/buy 1 btc at 3000 usd,
            the price is '3000.0'
        avg_price:
          type: number
          format: double
          description: Average execution price, average of price in trades.
        state:
          type: string
          description: One of 'wait', 'done', or 'cancel'.An order in 'wait' is an active
            order, waiting fulfillment;a 'done' order is an order
            fulfilled;'cancel' means the order has been canceled.
        market:
          type: string
          description: The market in which the order is placed, e.g. 'btcusd'.All available
            markets can be found at /api/v2/markets.
        market_type:
          type: string
          description: Market type.
        created_at:
          type: string
          description: Order create time in iso8601 format.
        updated_at:
          type: string
          description: Order updated time in iso8601 format.
        origin_volume:
          type: number
          format: double
          description: The amount user want to sell/buy.An order could be partially
            executed,e.g. an order sell 5 btc can be matched with a buy 3 btc
            order,left 2 btc to be sold; in this case the order's volume would
            be '5.0',its remaining_volume would be '2.0', its executed volume is
            '3.0'.
        remaining_volume:
          type: number
          format: double
          description: The remaining volume, see 'volume'.
        executed_volume:
          type: number
          format: double
          description: The executed volume, see 'volume'.
        maker_fee:
          type: number
          format: double
          description: Fee for maker.
        taker_fee:
          type: number
          format: double
          description: Fee for taker.
        trades_count:
          type: integer
          format: int32
          description: Count of trades.
        trades:
          type: array
          items:
            $ref: "#/components/schemas/Trade"
          description: Trades wiht this order.
      description: Get your orders, result is paginated.
    Market:
      type: object
      properties:
        symbol:
          type: string
          description: Unique market ticker symbol. It's always in the form of xxxyyy,where
            xxx is the base currency code, yyy is the quotecurrency code, e.g.
            'btcusd'. All available markets canbe found at /api/v2/markets.
        name:
          type: string
          description: Market name.
        type:
          type: string
          description: Market type.
        base_unit:
          type: string
          description: Market Base unit.
        quote_unit:
          type: string
          description: Market Quote unit.
        min_price:
          type: number
          format: double
          description: Minimum order price.
        max_price:
          type: number
          format: double
          description: Maximum order price.
        min_amount:
          type: number
          format: double
          description: Minimum order amount.
        amount_precision:
          type: number
          format: double
          description: Precision for order amount.
        price_precision:
          type: number
          format: double
          description: Precision for order price.
        state:
          type: string
          description: Market state defines if user can see/trade on current market.
        kline:
          type: string
          description: Market state defines if user can see/trade on current market.
      description: Get all available markets.
    Currency:
      type: object
      properties:
        id:
          type: string
          example: bnb
          description: Currency code.
        status:
          type: string
          description: Currency display status (enabled/disabled/hidden).
        name:
          type: string
          example: Binance Coin
          description: Currency name
        description:
          type: string
          example: null
          description: Currency description
        homepage:
          type: string
          example: null
          description: Currency homepage
        price:
          type: string
          description: Currency current price
        type:
          type: string
          example: coin
          description: Currency type
        precision:
          type: string
          example: 8
          description: Currency precision
        position:
          type: string
          example: 3
          description: Position used for defining currencies order
        icon_url:
          type: string
          example: https://upload.wikimedia.org/wikipedia/commons/0/05/Ethereum_logo_2014.svg
          description: Currency icon
        networks:
          type: array
          items:
            $ref: "#/components/schemas/BlockchainCurrency"
          description: Currency networks.
      description: Get a currency
    BlockchainCurrency:
      type: object
      properties:
        blockchain_key:
          type: string
          description: Unique key to identify blockchain.
        currency_id:
          type: string
          description: Unique id to identify currency.
        parent_id:
          type: string
          description: Blockchain currency parent id
        deposit_enabled:
          type: string
          description: Blockchain currency deposit possibility status (true/false).
        withdrawal_enabled:
          type: string
          description: Blockchain currency withdrawal possibility status (true/false).
        deposit_fee:
          type: string
          description: Blockchain currency deposit fee
        min_deposit_amount:
          type: string
          description: Minimal deposit amount
        withdraw_fee:
          type: string
          description: Blockchain currency withdraw fee
        min_withdraw_amount:
          type: string
          description: Minimal withdraw amount
        base_factor:
          type: string
          description: Blockchain currency base factor
        explorer_transaction:
          type: string
          example: https://testnet.blockchain.info/tx/
          description: Blockchain transaction exprorer url template
        explorer_address:
          type: string
          example: https://testnet.blockchain.info/address/
          description: Blockchain address exprorer url template
        description:
          type: string
          description: Blockchain description
        warning:
          type: string
          description: Blockchain warning
        protocol:
          type: string
          description: Blockchain protocol
        min_confirmations:
          type: string
          description: Number of confirmations required for confirming deposit or withdrawal
    Member:
      type: object
      properties:
        uid:
          type: string
          description: Member UID.
        email:
          type: string
          description: Member email.
        group:
          type: string
          description: Member's group.
      description: Returns current member
    InternalTransfer:
      type: object
      properties:
        currency:
          type: string
          description: The currency code.
        sender_username:
          type: string
          description: The internal transfer sender.
        receiver_username:
          type: string
          description: The internal transfer receiver.
        sender_uid:
          type: string
          description: The internal transfer sender.
        receiver_uid:
          type: string
          description: The internal transfer receiver.
        direction:
          type: string
          description: The internal transfer direction (incoming or outcoming internal
            transfer).
        amount:
          type: number
          format: double
          description: Internal transfer Amount.
        status:
          type: string
          description: The internal transfer state.
        created_at:
          type: string
          description: The datetimes for the internal transfer.
        updated_at:
          type: string
          description: The datetimes for the internal transfer.
      description: List your internal transfers as paginated collection.
    Withdraw:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The withdrawal id.
        currency:
          type: string
          description: The currency code.
        type:
          type: string
          description: The withdrawal type
        blockchain_key:
          type: string
          description: Unique key to identify blockchain.
        amount:
          type: string
          description: The withdrawal amount
        fee:
          type: number
          format: double
          description: The exchange fee.
        blockchain_txid:
          type: string
          description: The withdrawal transaction id.
        rid:
          type: string
          description: The beneficiary ID or wallet address on the Blockchain.
        protocol:
          type: string
          description: Blockchain protocol
        state:
          type: string
          description: The withdrawal state.
        confirmations:
          type: integer
          format: int32
          description: Number of confirmations.
        note:
          type: string
          description: Withdraw note.
        transfer_type:
          type: string
          description: Withdraw transfer type
        created_at:
          type: string
          description: The datetimes for the withdrawal.
        updated_at:
          type: string
          description: The datetimes for the withdrawal.
        done_at:
          type: string
          description: The datetime when withdraw was completed
      description: List your withdraws as paginated collection.
    Beneficiary:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Beneficiary Identifier in Database
        blockchain_key:
          type: string
          description: Unique key to identify blockchain.
        blockchain_name:
          type: string
          description: Blockchain name.
        currency:
          type: string
          description: Beneficiary currency code.
        uid:
          type: string
          description: Beneficiary owner
        name:
          type: string
          description: Human rememberable name which refer beneficiary.
        description:
          type: string
          description: Human rememberable description of beneficiary.
        data:
          type: json
          description: Bank Account details for fiat Beneficiary in JSON format.For crypto
            it's blockchain address.
        state:
          type: string
          description: Defines either beneficiary active - user can use it to withdraw
            moneyor pending - requires beneficiary activation with pin.
        sent_at:
          type: string
          description: Time when last pin was sent
      description: Get list of user beneficiaries
    Deposit:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Unique deposit id.
        currency:
          type: string
          description: Deposit currency id.
        blockchain_key:
          type: string
          description: Unique key to identify blockchain.
        protocol:
          type: string
          description: Blockchain protocol
        warning:
          type: string
          description: Blockchain warning
        amount:
          type: number
          format: double
          description: Deposit amount.
        fee:
          type: number
          format: double
          description: Deposit fee.
        txid:
          type: string
          description: Deposit transaction id.
        confirmations:
          type: integer
          format: int32
          description: Number of deposit confirmations.
        state:
          type: string
          description: Deposit state.
        transfer_type:
          type: string
          description: Deposit transfer type
        created_at:
          type: string
          description: The datetime when deposit was created.
        completed_at:
          type: string
          description: The datetime when deposit was completed..
        tid:
          type: string
          description: The shared transaction ID
      description: Get your deposits history.
    Account:
      type: object
      properties:
        currency:
          type: string
          description: Currency code.
        balance:
          type: number
          format: double
          description: Account balance.
        locked:
          type: number
          format: double
          description: Account locked funds.
        deposit_addresses:
          type: array
          items:
            $ref: "#/components/schemas/PaymentAddress"
          description: User deposit addresses
        virtual_account:
          type: array
          items:
            $ref: "#/components/schemas/VirtualAccounts"
          description: User Virtual account
      description: Get list of user accounts
    PaymentAddress:
      type: object
      properties:
        currencies:
          type: array
          items:
            type: string
            example:
              - bnb
              - eth
              - idr
              - jst
              - matic
              - trx
              - usdt
          description: Currencies codes.
        blockchain_key:
          type: string
          description: Unique key to identify blockchain.
        address:
          type: string
          description: Payment address.
        state:
          type: string
          description: Payment address state.
    VirtualAccounts:
      type: object
      properties:
        currency_id:
          type: string
          description: Currency ID
        bank:
          type: string
          description: Bank name
        number:
          type: string
          description: Virtual account number
        merchant_code:
          type: string
          description: Merchant Code
        name:
          type: string
          description: Virtual account name
    Transactions:
      type: object
      properties:
        address:
          type: string
          description: Recipient address of transaction.
        currency:
          type: string
          description: Transaction currency id.
        amount:
          type: number
          format: double
          description: Transaction amount.
        fee:
          type: number
          format: double
          description: Transaction fee.
        txid:
          type: string
          description: Transaction id.
        state:
          type: string
          description: Transaction state.
        note:
          type: string
          description: Withdraw note.
        confirmations:
          type: integer
          format: int32
          description: Number of confirmations.
        created_at:
          type: string
          description: Transaction created time in iso8601 format.
        updated_at:
          type: string
          description: Transaction updated time in iso8601 format.
        type:
          type: string
          description: Type of transaction